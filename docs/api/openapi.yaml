openapi: 3.1.0
info:
  title: Foxbase Semantic Search Frontend
  version: 0.1.0
paths:
  /api/collections:
    get:
      summary: Returns information about all collections.
      description: >-
        This returns information about all collections. This includes who
        created which collection and what key this collection has. Access is limited to admins and curators.
      operationId: collection_get
      responses:
        '200':
          description: Returns an array of information relating to the collections.
          content:
            json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    collection_name:
                      type: string
                    collection_description:
                      type: string
                    collection_creator:
                      type: string
      tags:
        - collections
    post:
      summary: Inserts a new collection and returns information about all collections.
      description: >-
        Checks if a collection with this collection key exists in foxbases back end and then inserts the relevant informations into the front end database. The return is usefull to automatically update a list of all collections. This creates a copy of the products and their typicall use cases in the front end database for pagination. The request Requires a name and a description for the collection. The key is the key that is used in foxbases database.
      operationId: collection_post
      requestBody:
        content:
          json:
            schema:
              type: object
              properties:
                collectionName:
                  type: string
                description:
                  type: string
                key:
                  type: string
      responses:
        '200':
          description: Returns an array of information relating to the collections.
          content:
            json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    collection_name:
                      type: string
                    collection_description:
                      type: string
                    collection_creator:
                      type: string
      tags:
        - collections
        
  /api/collections/{collectionID}:
    get:
      summary: Returns information about a specific collection.
      description: >-
        Returns information about a specific collection. The ID is the ID from the front end database, not the foxbase key. 
      operationId: collection_ID_get
      parameters:
        - name: collectionID
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the collection to access.
      responses:
        '200':
          description: Returns information about the collection in the form of an object.
          content:
            json:
              schema:
                type: object
                properties:
                  collection_name:
                    type: string
                  collection_description:
                    type: string
                  collection_creator:
                    type: string
      tags:
        - collections
    delete:
      summary: Deletes all information about a collection.
      parameters:
        - name: collectionID
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the collection to access.
      description: >-
        This deletes all information in the front end database about the specific collection. Does not delete the collection in foxbases database. Does not delete the front end copy of the products and use cases. The ID is the ID from the front end database, not the foxbase key. Access is limited to admins and curators.
      operationId: collection_ID_delete
            
      tags:
        - collections
        
  /api/collections/{collectionID}/products:
    get:
      summary: Returns all products in a specific collection.
      description: >-
        Returns all products from a collection. The ID is the ID from the front end database, not the foxbase key. 
      operationId: collection_ID_products_get
      parameters:
        - name: collectionID
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the collection to access.
        - name: page
          in: query
          required: true
          schema:
            type: integer
          description: The currently displayed page. Must be a positive integer, exclusive zero.
      responses:
        '200':
          description: Returns information about the products in the form of an object array.
          content:
            json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    foxbase_id:
                      type: integer
                    category:
                      type: string
                    description:
                      type: string
      tags:
        - collections
  /api/collections/{collectionID}/products/{productID}:
    get:
      summary: Returns a specif product in a specific collection.
      description: >-
        Returns a product from a collection. The ID is the ID from the front end database, not the foxbase key. 
      operationId: collection_ID_products_ID_get
      parameters:
        - name: collectionID
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the collection to access.
        - name: productID
          in: path
          schema:
            type: integer
          required: true
          description: The ID of the product to access.
      responses:
        '200':
          description: Returns information about the product in the form of an object.
          content:
            json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  foxbase_id:
                    type: integer
                  category:
                    type: string
                  description:
                    type: string
                  attributes:
                    type: string
                  typicalUseCases:
                    type: string
      tags:
        - collections
  
  /api/prompts:
    get:
      summary: Returns all prompts.
      description: >-
        Returns all promptsthat fit the parameters or all if no parameter is set. 
      operationId: prompts_get
      parameters:
        - name: text
          in: query
          schema:
            type: string
          required: false
          description: A query to search the content of a prompt.
        
      responses:
        '200 page':
          description: Returns all prompts on current page. Is used if page is set.
          content:
            json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    text:
                      type: string
                    user:
                      type: string
        '200 q':
          description: Returns all prompts that fit the query. Is used if q is set.
          content:
            json:
              schema:
                type: array
                items:
                  type: string
        '200 default':
          description: Returns all prompts. Is used if neither page nor q is set.
          content:
            json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    text:
                      type: string
                    user:
                      type: string
      tags:
          - prompts
                      
    post:
      summary: Creates a new prompt template.
      description: >-
       Creates a new prompt template and returns it.
      operationId: prompts_post
      requestBody:
        content:
          json:
            schema:
              type: object
              properties:
                text:
                  type: string
      responses:
        '200':
          description: Returns the create prompt.
          content:
            json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  text:
                    type: string
                  user:
                    type: string
      tags:
        - prompts
        
  /api/prompts/{promptID}:
    put:
      summary: Updates a prompt template.
      description: >-
       Updates a prompt template and returns it.
      operationId: prompts_ID_put
      requestBody:
        content:
          json:
            schema:
              type: object
              properties:
                text:
                  type: string
      parameters:
        - name: promptID
          description: The ID of the prompt that is to be changed.
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns the create prompt.
          content:
            json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  text:
                    type: string
                  user:
                    type: string
      tags:
        - prompts
    delete:
      summary: Deletes a prompt template.
      description: >-
       Deletes a prompt template.
      operationId: prompts_ID_delete
      parameters:
        - name: promptID
          description: The ID of the prompt that is to be changed.
          in: path
          schema:
            type: string
          required: true
      tags:
        - prompts
  /api/settings:
    patch:
      summary: Updates the settings.
      description: >-
       Updates the settings. Gets key/value pairs from the string in the request body. If a setting with a given key does not yet exist it will be created in the database.
      operationId: settings_patch
      requestBody:
        content:
          json:
            schema:
              type: string
      tags:
        - settings
    get:
      summary: Returns the settings.
      description: >-
       Returns all settings.
      operationId: settings_get
      responses:
        '200':
          description: Returns key/value pairs.
          content:
            key/value:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name: 
                      type: string
                    value:
                      type: string
                      
                
      tags:
        - settings
    
  /api/users:
    get:
      summary: Returns all users.
      description: >-
       Returns all users.
      operationId: users_get
      responses:
        '200':
          description: Returns all users.
          content:
            json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id: 
                      type: integer
                    name:
                      type: string
                    role:
                      type: string
      tags:
        - users
    put:
      summary: Creates a new users.
      description: >-
       Creates a new users and returns it.
      operationId: users_put
      requestBody:
        content:
          json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                role:
                  type: string
      responses:
        '200':
          description: Returns key/value pairs.
          content:
            json:
              schema:
                type: object
                properties:
                  id: 
                    type: integer
                  name:
                    type: string
                  role:
                    type: string
      tags:
        - users
    delete:
      summary: Deletes a  users.
      description: >-
       Creates a new users and returns it.
      operationId: users_delete
      requestBody:
        content:
          json:
            schema:
              type: object
              properties:
                id:
                  type: integer
      tags:
        - users
  /api/users/change-password:
    put:
      summary: Changes the password of the currently logged in user.
      description: >-
       Creates a new users and returns it.
      operationId: users_cp_put
      requestBody:
        content:
          json:
            schema:
              type: object
              properties:
                password:
                  type: string
                newPassword:
                  type: string
      tags:
        - users
  /api/users/admin/change-name:
    put:
        summary: Changes the name of a specified user.
        description: >-
         Changes the name of a specified user.
        operationId: users_acn_put
        requestBody:
          content:
            json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  newName:
                    type: string
        tags:
          - users
  /api/users/admin/change-password:
    put:
        summary: Changes the password of a specified user.
        description: >-
         Changes the name of a specified user.
        operationId: users_acp_put
        requestBody:
          content:
            json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  newPassword:
                    type: string
        tags:
          - users
  /api/users/admin/change-role:
    put:
        summary: Changes the role of a specified user.
        description: >-
         Changes the role of a specified user.
        operationId: users_acr_put
        requestBody:
          content:
            json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  newRole:
                    type: string
        tags:
          - users
          
  /api/generate-response:
    get:
      summary: Returns a response from foxbases API for a given query.
      description: >-
       Returns a response from foxbases API for a given query.
      operationId: get_response
      parameters:
        - name: q
          description: The query the user entert to search a collection.
      responses:
        '200':
          description: Returns the markdown from the ai as html.
          content:
            json:
              schema:
                type: object
                properties:
                  response:
                    type: string
      tags:
        - product view               
  /api/insert-feedback:
    post:
      summary: Inserts feedback into foxbases database.
      description: >-
       Inserts feedback into foxbases database. query is the query the user used to search the collection. The value of feedback has to be -1 or 1. id is the foxbase ID of the product.
      operationId: post_ins_feedback
      requestBody:
        content:
          json:
            schema:
              type: object
              properties:
                query:
                  type: string
                id: 
                  type: integer
                feedback:
                  type: integer
      tags:
        - product view              
  /api/search:
    get:
      summary: Sends a search request to foxbases API and the uses the frontend databases copy of the collection to display the products.
      description: >-
       Returns all settings.
      operationId: search
      responses:
        '200':
          description: Returns key/value pairs.
          content:
            key/value:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id: 
                      type: integer
                    foxbaseId:
                      type: integer
                    name: 
                      type: string
                    category:
                      type: string
                    description:
                      type: string
                    attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                    typicalUseCases:
                      type: array
                      items:
                        type: string
                    score:
                      type: integer
      tags:
        - product view
  /api/login:
    post:
      summary: Logs the user in.
      description: >-
       Logs the user into the admin panel by setting a user session.
      operationId: login
      requestBody:
        content:
          json:
            schema:
              type: object
              properties:
                username: 
                  type: string
                password: 
                  type: string
      tags:
        - users
                          
tags:
  - name: collections
    description: These are API endpoints to manipulate and view collections. Only the information that is stored in the front end database can be manipulated. Not the actual content of the collection.
  - name: prompts
    description: These are API endpoints to manipulate and view prompt templates.
  - name: settings
    description: These are API endpoints to manipulate and view settings for the website.
  - name: users
    description: These are API endpoints to manipulate and view users.
  - name: product view
    description: These are API endpoints that interact with foxbase to display the products based on the LLMs output.
    
    
    
    
    
