stages:
  - lint-and-format
  - build
  - deploy

default:
  image: node:20-bookworm
  before_script:
    - npm ci

lint-and-format-job:
  stage: lint-and-format
  script:
    - npm run lint || lint_failed=1
    - npm run format
    - |
      if [[ $(git status --porcelain) ]]; then
        git config user.name 'GitLab CI'
        git config user.email ci@noreply.gitlab.com
        git commit -am 'Lint and format'
        git push "https://gitlab-ci-token:$PROJECT_ACCESS_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git" HEAD:$CI_COMMIT_REF_NAME
        exit 1
      fi
    - |
      if [[ $lint_failed = 1 ]]; then
        echo "Linting errors occured that couldn't be fixed automatically"
        exit 1
      fi

build-job:
  stage: build
  script:
    - npm run build
  artifacts:
    paths:
      - dist

.deployments:
  stage: deploy
  script:
    - deploy_output=$(npx wrangler pages deploy dist --project-name=foxbaseai --branch=$CI_COMMIT_REF_NAME)
    - echo $deploy_output
    - "deploy_url=$(echo $deploy_output | grep -oP '(?<=âœ¨ Deployment alias URL: ).+')"
    - echo DYNAMIC_ENVIRONMENT_URL=$deploy_url > deploy.env

deploy-production:
  extends: .deployments
  rules:
    - if: $CI_COMMIT_REF_NAME == 'main'
  environment:
    name: production
    url: https://foxbaseai.maxoverlack.dev

deploy-stage:
  extends: .deployments
  rules:
    - if: $CI_COMMIT_REF_NAME == 'stage'
  environment:
    name: stage
    url: https://stage.foxbaseai.maxoverlack.dev
    deployment_tier: staging

deploy-branch:
  extends: .deployments
  rules:
    - if: $CI_COMMIT_REF_NAME != 'main' && $CI_COMMIT_REF_NAME != 'stage'
  environment:
    name: branch/$CI_COMMIT_REF_SLUG
    url: $DYNAMIC_ENVIRONMENT_URL
    deployment_tier: development
  artifacts:
    reports:
      dotenv: deploy.env
